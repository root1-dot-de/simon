##############################################################
# 1) Schlüsselpaar erzeugen

	#>keytool -genkey -alias mykey -keyalg RSA -keysize 2048 -validity 1825 -keystore .serverkeystore -dname "CN=root1.de,OU=achr,O=Neckarbischofsheim,C=de"
	Geben Sie das Keystore-Passwort ein:
	Keystore-Passwort zu kurz - muss mindestens 6 Zeichen lang sein.
	Geben Sie das Keystore-Passwort ein:
	Geben Sie das Passwort erneut ein:
	Geben Sie das Passwort für <mykey> ein.
	        (EINGABETASTE, wenn Passwort dasselbe wie für Keystore):

##############################################################		
# 2) Zertifizierungsantrag generieren

	#>keytool -certreq -alias mykey -keyalg RSA -file root1.csr -keystore .serverkeystore
	Geben Sie das Keystore-Passwort ein:

# Dann auf cacert.org ein neues Serverzertifikat anfordern. 
# Hierzu den Inhalt von "root1.csr" angeben.

##############################################################
# 3) Zertifikat und privaten Schlüssel installieren:
# Von cacert.org (Link: https://www.cacert.org/index.php?id=3)
# das Class 1 PKI Key Root Certificate im PEM Format runterladen 
# und als "Wurzel" in die Vertrauenskette einfügen: 

	#>keytool -import -file root.crt -alias root -keystore .serverkeystore
	Geben Sie das Keystore-Passwort ein:
	Eigner: EMAILADDRESS=support@cacert.org, CN=CA Cert Signing Authority, OU=http://www.cacert.org, O=Root CA
	Aussteller: EMAILADDRESS=support@cacert.org, CN=CA Cert Signing Authority, OU=http://www.cacert.org, O=Root CA
	Seriennummer: 0
	Gültig von: Sun Mar 30 14:29:49 CEST 2003 bis: Tue Mar 29 14:29:49 CEST 2033
	Digitaler Fingerabdruck des Zertifikats:
	         MD5:  A6:1B:37:5E:39:0D:9C:36:54:EE:BD:20:31:46:1F:6B
	         SHA1: 13:5C:EC:36:F4:9C:B8:E9:3B:1A:B2:70:CD:80:88:46:76:CE:8F:33
	         Unterschrift-Algorithmusname: MD5withRSA
	         Version: 3
	
	Erweiterungen:
	
	#1: ObjectId: 2.5.29.19 Criticality=true
	BasicConstraints:[
	  CA:true
	  PathLen:2147483647
	]
	
	#2: ObjectId: 2.5.29.14 Criticality=false
	SubjectKeyIdentifier [
	KeyIdentifier [
	0000: 16 B5 32 1B D4 C7 F3 E0   E6 8E F3 BD D2 B0 3A EE  ..2...........:.
	0010: B2 39 18 D1                                        .9..
	]
	]
	
	#3: ObjectId: 2.16.840.1.113730.1.8 Criticality=false
	
	#4: ObjectId: 2.16.840.1.113730.1.4 Criticality=false
	
	#5: ObjectId: 2.5.29.31 Criticality=false
	CRLDistributionPoints [
	  [DistributionPoint:
	     [URIName: https://www.cacert.org/revoke.crl]
	]]
	
	#6: ObjectId: 2.5.29.35 Criticality=false
	AuthorityKeyIdentifier [
	KeyIdentifier [
	0000: 16 B5 32 1B D4 C7 F3 E0   E6 8E F3 BD D2 B0 3A EE  ..2...........:.
	0010: B2 39 18 D1                                        .9..
	]
	
	[EMAILADDRESS=support@cacert.org, CN=CA Cert Signing Authority, OU=http://www.cacert.org, O=Root CA]
	SerialNumber: [    00]
	]
	
	#7: ObjectId: 2.16.840.1.113730.1.13 Criticality=false
	
	Diesem Zertifikat vertrauen? [Nein]:  ja
	Zertifikat wurde zu Keystore hinzugefügt.

# Dann das eigene Zertifikat runterladen (anzeigen -> copy&paste -> 
# in Textdatei einfügen und speichern) und als root1.crt speichern, 
# und mit folgendem Kommando einfügen:

	#>keytool -import -file root1.crt -alias mykey -keystore .serverkeystore
	Geben Sie das Keystore-Passwort ein:
	Zertifikatantwort wurde in Keystore installiert.

##############################################################
# 4) Soviel zum Server-Keystore. Dem Client reicht nach dem erstellen 
#    des Serverkeystores bedeutend weniger:

	#>keytool -import -v -alias mykey -file root1.crt -keystore .clientkeystore
	Geben Sie das Keystore-Passwort ein:
	Geben Sie das Passwort erneut ein:
	Eigner: CN=root1.de
	Aussteller: EMAILADDRESS=support@cacert.org, CN=CA Cert Signing Authority, OU=http://www.cacert.org, O=Root CA
	Seriennummer: 62ba4
	Gültig von: Wed Dec 17 09:52:45 CET 2008 bis: Mon Jun 15 10:52:45 CEST 2009
	Digitaler Fingerabdruck des Zertifikats:
	         MD5:  2B:E5:DC:8E:1C:0C:CE:AD:7D:76:D5:6F:9C:9D:2B:C6
	         SHA1: 94:49:BA:E8:7F:DB:90:A2:EB:F0:8B:7B:A6:F2:AB:C5:62:66:85:7D
	         Unterschrift-Algorithmusname: SHA1withRSA
	         Version: 3
	
	Erweiterungen:
	
	#1: ObjectId: 2.5.29.19 Criticality=true
	BasicConstraints:[
	  CA:false
	  PathLen: undefined
	]
	
	#2: ObjectId: 2.5.29.15 Criticality=false
	KeyUsage [
	  DigitalSignature
	  Key_Encipherment
	]
	
	#3: ObjectId: 1.3.6.1.5.5.7.1.1 Criticality=false
	AuthorityInfoAccess [
	  [accessMethod: 1.3.6.1.5.5.7.48.1
	   accessLocation: URIName: http://ocsp.cacert.org/]
	]
	
	#4: ObjectId: 2.5.29.37 Criticality=false
	ExtendedKeyUsages [
	  clientAuth
	  serverAuth
	  2.16.840.1.113730.4.1
	  1.3.6.1.4.1.311.10.3.3
	]
	
	#5: ObjectId: 2.5.29.17 Criticality=false
	SubjectAlternativeName [
	  DNSName: root1.de
	  Other-Name: Unrecognized ObjectIdentifier: 1.3.6.1.5.5.7.8.5
	]
	
	Diesem Zertifikat vertrauen? [Nein]:  ja
	Zertifikat wurde zu Keystore hinzugefügt.
	[.clientkeystore wird gesichert.]

--> Fertig.

######################################################################
Idee durch: http://portal.uni-freiburg.de/rz/dienste/pki/docu/s-req/keytool
######################################################################